{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Language and Environment */
    "target": "es2016",
    /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    /* Modules */
    "module": "ES6",
    /* Specify what module code is generated. */
    "rootDir": "./public",
    /* Specify the root folder within your source files. */
    "moduleResolution": "node",

    /* JavaScript Support */
    "allowJs": true,
    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    "sourceMap": true,

    "esModuleInterop": true,
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true,
    /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": false, //fix
    /* Enable all strict type-checking options. */
    "noImplicitAny": false, //fix
    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": false, //fix
    /* When type checking, take into account 'null' and 'undefined'. */
    "strictFunctionTypes": false, //fix
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": false, //fix
    /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    //"strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,
    /* Enable error reporting when 'this' is given the type 'any'. */
    "alwaysStrict": false, //fix
    /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true,
    /* Enable error reporting when local variables aren't read. */
    //"noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true,
    /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noImplicitOverride": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */

    "skipLibCheck": true,
    /* Skip type checking all .d.ts files. */
    "typeRoots": [
      "./node_modules/@types",
      "./types"
    ]
  },
  "exclude": [
    "node_modules",
    "dist"
  ]
}
